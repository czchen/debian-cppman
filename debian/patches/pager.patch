Description: Use $PAGER as default pager
---
Forwarded: https://github.com/aitjcize/cppman/pull/20
--- cppman-0.3.1.orig/bin/cppman
+++ cppman-0.3.1/bin/cppman
@@ -73,8 +73,9 @@ def main():
                     "manpage path to mandb so that you can view C++ manpages "
                     "with `man' command. The default value is 'false'."),
         make_option('-p', '--pager', action='store', dest='pager',
-                    help="Select pager to use, accepts 'vim' or 'less'."
-                    "The default value is 'vim'."),
+                    help="Select pager to use, accepts 'vim', 'less' or 'system'. "
+                    "'system' uses $PAGER environment as pager. "
+                    "The default value is 'system'."),
         make_option('-r', '--rebuild-index', action='store_true',
                     dest='rebuild_index', default=False,
                     help='rebuild index database from cplusplus.com'),
@@ -106,7 +107,9 @@ def main():
         sys.exit(0)
 
     if options.pager:
-        if options.pager == 'vim' or options.pager == 'less':
+        if (options.pager == 'vim' or
+                options.pager == 'less' or
+                options.pager == 'system'):
             config.Pager = options.pager
             print "Pager set to `%s'." % options.pager
             sys.exit(0)
--- cppman-0.3.1.orig/cppman/Config.py
+++ cppman-0.3.1/cppman/Config.py
@@ -56,7 +56,7 @@ class Config(object):
         self._config = ConfigParser.RawConfigParser()
         self._config.add_section('Settings')
         self._config.set('Settings', 'UpdateManPath', 'false')
-        self._config.set('Settings', 'Pager', 'vim')
+        self._config.set('Settings', 'Pager', 'system')
 
         with open(self._configfile, 'w') as f:
             self._config.write(f)
--- cppman-0.3.1.orig/cppman/Environ.py
+++ cppman-0.3.1/cppman/Environ.py
@@ -51,8 +51,10 @@ pager_config = get_lib_path('lib/cppman.
 
 if config.pager == 'vim':
     pager = get_lib_path('lib/pager_vim.sh')
-else:
+elif config.pager == 'less':
     pager = get_lib_path('lib/pager_less.sh')
+else:
+    pager = get_lib_path('lib/pager_system.sh')
 
 renderer = get_lib_path('lib/render.sh')
 
--- /dev/null
+++ cppman-0.3.1/cppman/lib/pager_system.sh
@@ -0,0 +1,34 @@
+#!/usr/bin/env bash
+#
+# pager_less.sh
+#
+# Copyright (C) 2010 - 2013  Wei-Ning Huang (AZ) <aitjcize@gmail.com>
+# All Rights reserved.
+#
+# This file is part of cppman.
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software Foundation,
+# Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+#
+
+# viewer.sh is a lauches vim as man page viewer and provides some convinient
+# settings
+#
+
+if [ -z "$PAGER" ]; then
+    PAGER=less
+fi
+
+escape=$(echo -e '\033')
+cat "$1" | gunzip | groff -t -c -m man -Tascii -rLL=$2n -rLT=$2n 2> /dev/null | sed "s/$escape\[[^m]*m//g" | $PAGER
--- cppman-0.3.1.orig/setup.py
+++ cppman-0.3.1/setup.py
@@ -2,8 +2,15 @@
 
 from distutils.core import setup
 
-_package_data = ['lib/index.db', 'lib/pager_vim.sh', 'lib/pager_less.sh',
-                 'lib/render.sh', 'lib/cppman.vim']
+_package_data = [
+        'lib/index.db',
+        'lib/pager_vim.sh',
+        'lib/pager_less.sh',
+        'lib/pager_system.sh',
+        'lib/render.sh',
+        'lib/cppman.vim'
+        ]
+
 _data_files = [
         ('share/doc/cppman', ['README.rst', 'AUTHORS', 'COPYING', 'ChangeLog']),
         ('share/man/man1', ['misc/cppman.1'])
